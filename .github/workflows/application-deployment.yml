name: Application Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy Application
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Azure Container Registry
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Step 4: Build and Push Backend Image
    - name: Build and Push Backend Image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest ./backend
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest

    # Step 5: Build and Push Frontend Image
    - name: Build and Push Frontend Image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest ./frontend
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest

    # Step 6: Configure kubectl for AKS
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.27.1'

    - name: Log in to Azure AKS
      uses: azure/aks-set-context@v1
      with:
        resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AZURE_AKS_CLUSTER_NAME }}

    # Step 7: Deploy to AKS
    - name: Deploy to AKS
      run: |
        kubectl set image deployment/backend backend=${{ secrets.ACR_LOGIN_SERVER }}/backend:latest -n default
        kubectl set image deployment/frontend frontend=${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest -n default
        kubectl rollout restart deployment/backend -n default
        kubectl rollout restart deployment/frontend -n default
