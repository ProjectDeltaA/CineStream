name: Helm Deployment Pipeline

on:
  push:
    branches:
      - main
    paths:
       - .github/workflows/application-deployment.yml
       - movie-app/**

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy with Helm
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Log in to Azure using az login
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 4: Log in to Azure Container Registry
    - name: Log in to Azure Container Registry
      run: |
        az acr login --name ${{ secrets.ACR_USERNAME }}

    # Step 5: Build and Push Backend Image
    - name: Build and Push Backend Image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest ./backend
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest

    # Step 6: Build and Push Frontend Image
    - name: Build and Push Frontend Image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest ./frontend
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest

    # Step 7: Configure kubectl for AKS
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.27.1'

    - name: Log in to AKS
      run: |
        az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER_NAME }}

    # Step 8: Deploy with Helm CLI
    - name: Deploy with Helm CLI
      run: |
        helm upgrade --install movieapp movie-app/helm-charts \
          --namespace default \
          --set backend.image.repository=${{ secrets.ACR_LOGIN_SERVER }}/backend \
          --set backend.image.tag=latest \
          --set frontend.image.repository=${{ secrets.ACR_LOGIN_SERVER }}/frontend \
          --set frontend.image.tag=latest
